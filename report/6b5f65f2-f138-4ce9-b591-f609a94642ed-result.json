{"name": "test_login[test_data1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert '' == '1'\n  - 1", "trace": "self = <tests.test_organization.TestOrgmanage object at 0x000001D39AB0AF40>\ntoken = 'Bearer buze6AZ5-Rl7FvXZPQif5yVvz8wl-vv_UykVDFrmbYw74nssFiiwxjtLnsLiWBRvnWZ5zUHXNt9YtLp23rSiK6YrJrbZip_fSYAEzE3sePfT-1...XSL1_Z87wr0s0qWtFr2bz3fxLoCo8nuq_wnI0KTzi0EF4FVIiA0eyjVcRO2Sx1SQM5HOFIzKrF2kKXb4tQXuhW93PPvXC9X2ky8BCwrtC7YVBp_4foYvLW'\ntest_data = {'case_id': 2, 'data': '{\\n  \"Id\": 0,\\n  \"OrgName\": \"\",\\n  \"ProvinceId\": 3,\\n  \"CityId\": 276,\\n  \"Contacts\": \"\",\\n  \"PhoneNumber\": \"\",\\n  \"OrgStatus\": 1\\n}', 'expected': \"{'code':'', 'msg': ''}\", 'interface': 'OrgManage', ...}\n\n    @pytest.mark.parametrize('test_data', test_data)\n    def test_login(self, token, test_data):\n        expected = eval(test_data['expected'])\n        headers = {}\n        headers['Authorization'] = token\n        actual = request(method = test_data['method'],\n                         url = read_config.get('env','host') + test_data['url'],\n                         headers = headers,\n                         json = eval(test_data['data'])\n                         ).json()  # 发送请求，获得响应数据\n        row = test_data['case_id'] + 1\n        test_result = ''\n        try:\n            assert expected['code'] == actual['code']\n            assert expected['msg'] == actual['msg']\n        except AssertionError as e:\n            log.error('用例--{}--执行不通过'.format(test_data['title']))\n            test_result = '不通过'\n            log.debug('预期结果是：{}'.format(expected))\n            log.debug('实际结果是：{}'.format(actual))\n            log.critical(e)\n>           raise e\n\ntests\\test_organization.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <tests.test_organization.TestOrgmanage object at 0x000001D39AB0AF40>\ntoken = 'Bearer buze6AZ5-Rl7FvXZPQif5yVvz8wl-vv_UykVDFrmbYw74nssFiiwxjtLnsLiWBRvnWZ5zUHXNt9YtLp23rSiK6YrJrbZip_fSYAEzE3sePfT-1...XSL1_Z87wr0s0qWtFr2bz3fxLoCo8nuq_wnI0KTzi0EF4FVIiA0eyjVcRO2Sx1SQM5HOFIzKrF2kKXb4tQXuhW93PPvXC9X2ky8BCwrtC7YVBp_4foYvLW'\ntest_data = {'case_id': 2, 'data': '{\\n  \"Id\": 0,\\n  \"OrgName\": \"\",\\n  \"ProvinceId\": 3,\\n  \"CityId\": 276,\\n  \"Contacts\": \"\",\\n  \"PhoneNumber\": \"\",\\n  \"OrgStatus\": 1\\n}', 'expected': \"{'code':'', 'msg': ''}\", 'interface': 'OrgManage', ...}\n\n    @pytest.mark.parametrize('test_data', test_data)\n    def test_login(self, token, test_data):\n        expected = eval(test_data['expected'])\n        headers = {}\n        headers['Authorization'] = token\n        actual = request(method = test_data['method'],\n                         url = read_config.get('env','host') + test_data['url'],\n                         headers = headers,\n                         json = eval(test_data['data'])\n                         ).json()  # 发送请求，获得响应数据\n        row = test_data['case_id'] + 1\n        test_result = ''\n        try:\n>           assert expected['code'] == actual['code']\nE           AssertionError: assert '' == '1'\nE             - 1\n\ntests\\test_organization.py:27: AssertionError"}, "attachments": [{"name": "log", "source": "2e06a267-1387-4e77-898a-c530870d1d81-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "168e1a5c-5399-4701-baf4-ad9bdaeab171-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_data", "value": "{'case_id': 2, 'interface': 'OrgManage', 'title': '所有信息为空', 'method': 'post', 'url': '/api/OrgManage/Add', 'data': '{\\n  \"Id\": 0,\\n  \"OrgName\": \"\",\\n  \"ProvinceId\": 3,\\n  \"CityId\": 276,\\n  \"Contacts\": \"\",\\n  \"PhoneNumber\": \"\",\\n  \"OrgStatus\": 1\\n}', 'expected': \"{'code':'', 'msg': ''}\", 'sql': None, 'result': '不通过'}"}], "start": 1613790461286, "stop": 1613790461687, "uuid": "623b67d7-3e91-4988-9ea9-2a724ae15cc4", "historyId": "cfefe6c09fb44a9aa0f10e3680e72d1a", "testCaseId": "6ede1d9d335e16acffcc972a7d8e514a", "fullName": "tests.test_organization.TestOrgmanage#test_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_organization"}, {"name": "subSuite", "value": "TestOrgmanage"}, {"name": "host", "value": "DESKTOP-8M7P7VT"}, {"name": "thread", "value": "15180-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_organization"}]}