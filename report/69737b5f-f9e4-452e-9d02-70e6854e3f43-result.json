{"name": "test_login[test_data1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert '1' == '0'\n  - 0\n  + 1", "trace": "self = <tests.test_organization.TestOrgmanage object at 0x00000137563FE0D0>\ntoken = 'Bearer oVM0Tmv1ZA9azPthepIOTJJ2z4HkxQZccKG3XAvX11A2Tl2_4riPhTDMAukoC_FmiaFoFd9oqJql7bE1y3k7h-SVXUxQvgpNfO4wZeKs7V6Xa8...xPMPhWydJ21t5uRStSSHt0Wk3N0gcDIjlf-FD_oYTNHNUtxKlE4QG9Rh2kYmKpVbTBq_GtJe0hvOE4AB891exmzYZyoY6W4y0Jf_CQkuNcjKvTQYqB9Oas'\ntest_data = {'actual': '{\\'code\\': \\'0\\', \\'msg\\': \"Column \\'OrgName\\' cannot be null\", \\'result\\': None}', 'case_id': 2, 'data': ...276,\\n  'Contacts': '',\\n  'PhoneNumber': '',\\n  'OrgStatus': 1\\n}\", 'expected': \"{'code':'1', 'msg': '操作执行成功！'}\", ...}\n\n    @pytest.mark.parametrize('test_data', test_data)\n    def test_login(self, token, test_data):\n        expected = eval(test_data['expected'])\n    \n        headers = {}\n        headers['Authorization'] = token\n        actual = request(method = test_data['method'],\n                         url = read_config.get('env','host') + test_data['url'],\n                         headers = headers,\n                         data = eval(test_data['data'].replace('测试name', 'api测试' + str(random.randint(1,99999999))))\n                         ).json()  # 发送请求，获得响应数据\n    \n        db_check = self.db.find_count('select OrgName from organizationtable where ID = 10')  # 数据库查询添加数据\n    \n        row = test_data['case_id'] + 1\n        test_result = ''\n        try:\n            assert db_check == 1\n            assert expected['code'] == actual['code']\n            assert expected['msg'] == actual['msg']\n        except AssertionError as e:\n            log.error('用例--{}--执行不通过'.format(test_data['title']))\n            test_result = '不通过'\n            log.debug('数据库查询预期结果是: 1')\n            log.debug('数据库查询实际结果是: {}'.format(db_check))\n            log.debug('返回值预期结果是: {}'.format(expected))\n            log.debug('返回值实际结果是: {}'.format(actual))\n            log.critical(e)\n>           raise e\n\ntests\\test_organization.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <tests.test_organization.TestOrgmanage object at 0x00000137563FE0D0>\ntoken = 'Bearer oVM0Tmv1ZA9azPthepIOTJJ2z4HkxQZccKG3XAvX11A2Tl2_4riPhTDMAukoC_FmiaFoFd9oqJql7bE1y3k7h-SVXUxQvgpNfO4wZeKs7V6Xa8...xPMPhWydJ21t5uRStSSHt0Wk3N0gcDIjlf-FD_oYTNHNUtxKlE4QG9Rh2kYmKpVbTBq_GtJe0hvOE4AB891exmzYZyoY6W4y0Jf_CQkuNcjKvTQYqB9Oas'\ntest_data = {'actual': '{\\'code\\': \\'0\\', \\'msg\\': \"Column \\'OrgName\\' cannot be null\", \\'result\\': None}', 'case_id': 2, 'data': ...276,\\n  'Contacts': '',\\n  'PhoneNumber': '',\\n  'OrgStatus': 1\\n}\", 'expected': \"{'code':'1', 'msg': '操作执行成功！'}\", ...}\n\n    @pytest.mark.parametrize('test_data', test_data)\n    def test_login(self, token, test_data):\n        expected = eval(test_data['expected'])\n    \n        headers = {}\n        headers['Authorization'] = token\n        actual = request(method = test_data['method'],\n                         url = read_config.get('env','host') + test_data['url'],\n                         headers = headers,\n                         data = eval(test_data['data'].replace('测试name', 'api测试' + str(random.randint(1,99999999))))\n                         ).json()  # 发送请求，获得响应数据\n    \n        db_check = self.db.find_count('select OrgName from organizationtable where ID = 10')  # 数据库查询添加数据\n    \n        row = test_data['case_id'] + 1\n        test_result = ''\n        try:\n            assert db_check == 1\n>           assert expected['code'] == actual['code']\nE           AssertionError: assert '1' == '0'\nE             - 0\nE             + 1\n\ntests\\test_organization.py:36: AssertionError"}, "attachments": [{"name": "log", "source": "b86f4c08-ad0e-4237-af31-de7adc2fa484-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "e0ae562a-a72b-48ac-88a5-0d494ff7b317-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_data", "value": "{'case_id': 2, 'interface': 'OrgManage', 'title': '所有信息为空', 'method': 'post', 'url': '/api/OrgManage/Add', 'data': \"{\\n  'Id': 0,\\n  'OrgName': '',\\n  'ProvinceId': 3,\\n  'CityId': 276,\\n  'Contacts': '',\\n  'PhoneNumber': '',\\n  'OrgStatus': 1\\n}\", 'expected': \"{'code':'1', 'msg': '操作执行成功！'}\", 'actual': '{\\'code\\': \\'0\\', \\'msg\\': \"Column \\'OrgName\\' cannot be null\", \\'result\\': None}', 'result': '不通过'}"}], "start": 1613974149341, "stop": 1613974149744, "uuid": "62a1c5ca-2eed-4e5e-a4e8-e432fc1c76b9", "historyId": "cfefe6c09fb44a9aa0f10e3680e72d1a", "testCaseId": "6ede1d9d335e16acffcc972a7d8e514a", "fullName": "tests.test_organization.TestOrgmanage#test_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_organization"}, {"name": "subSuite", "value": "TestOrgmanage"}, {"name": "host", "value": "DESKTOP-8M7P7VT"}, {"name": "thread", "value": "13412-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_organization"}]}